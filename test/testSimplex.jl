using LinearAlgebra
using JTools
using BenchmarkTools

function Conf1()
    rCoM = [0.011492287518140363, 0.013142790801125676, 1.4899054489372667]

    posOR_B = [
        -0.9000000	1.9000000	0.4300000
        0.0000000	1.9000000	0.4300000
        0.9000000	1.9000000	0.4300000
        1.9000000	0.9000000	0.4300000
        1.9000000	0.0000000	0.4300000
        1.9000000	-0.9000000	0.4300000
        0.9000000	-1.9000000	0.4300000
        0.0000000	-1.9000000	0.4300000
        -0.9000000	-1.9000000	0.4300000
        -1.9000000	-0.9000000	0.4300000
        -1.9000000	0.0000000	0.4300000
        -1.9000000	0.9000000	0.4300000
        -0.9000000	1.9000000	0.4300000
        0.0000000	1.9000000	0.4300000
        0.9000000	1.9000000	0.4300000
        1.9000000	0.9000000	0.4300000
        1.9000000	0.0000000	0.4300000
        1.9000000	-0.9000000	0.4300000
        0.9000000	-1.9000000	0.4300000
        0.0000000	-1.9000000	0.4300000
        -0.9000000	-1.9000000	0.4300000
        -1.9000000	-0.9000000	0.4300000
        -1.9000000	0.0000000	0.4300000
        -1.9000000	0.9000000	0.4300000]

    dirR_B = [
        0.0000000	-0.3420201	0.9396926
        0.0000000	-0.3420201	0.9396926
        0.0000000	-0.3420201	0.9396926
        -0.3420201	0.0000000	0.9396926
        -0.3420201	0.0000000	0.9396926
        -0.3420201	0.0000000	0.9396926
        0.0000000	0.3420201	0.9396926
        0.0000000	0.3420201	0.9396926
        0.0000000	0.3420201	0.9396926
        0.3420201	0.0000000	0.9396926
        0.3420201	0.0000000	0.9396926
        0.3420201	0.0000000	0.9396926
        0.0000000	-0.3420201	-0.9396926
        0.0000000	-0.3420201	-0.9396926
        0.0000000	-0.3420201	-0.9396926
        -0.3420201	0.0000000	-0.9396926
        -0.3420201	0.0000000	-0.9396926
        -0.3420201	0.0000000	-0.9396926
        0.0000000	0.3420201	-0.9396926
        0.0000000	0.3420201	-0.9396926
        0.0000000	0.3420201	-0.9396926
        0.3420201	0.0000000	-0.9396926
        0.3420201	0.0000000	-0.9396926
        0.3420201	0.0000000	-0.9396926]

    return posOR_B, dirR_B, rCoM
end

function Conf2()
    rCoM = [0.011492287518140363, 0.013142790801125676, 1.4899054489372667]

    posOR_B = [
        -0.75250	-1.95400	0.63000
        -0.87750	-1.95400	0.63000
        0.87750	-1.95400	0.63000
        1.00250	-1.95400	0.63000
        -0.75250	-1.95400	0.43000
        -0.87750	-1.95400	0.43000
        0.87750	-1.95400	0.43000
        1.00250	-1.95400	0.43000
        -1.95400	0.75250	0.63000
        -1.95400	0.87750	0.63000
        -1.95400	-0.87750	0.63000
        -1.95400	-1.00250	0.63000
        -1.95400	0.75250	0.43000
        -1.95400	0.87750	0.43000
        -1.95400	-0.87750	0.43000
        -1.95400	-1.00250	0.43000
        0.75250	1.95400	0.63000
        0.87750	1.95400	0.63000
        -0.87750	1.95400	0.63000
        -1.00250	1.95400	0.63000
        0.75250	1.95400	0.43000
        0.87750	1.95400	0.43000
        -0.87750	1.95400	0.43000
        -1.00250	1.95400	0.43000
        1.95400	-0.75250	0.63000
        1.95400	-0.87750	0.63000
        1.95400	0.87750	0.63000
        1.95400	1.00250	0.63000
        1.95400	-0.75250	0.43000
        1.95400	-0.87750	0.43000
        1.95400	0.87750	0.43000
        1.95400	1.00250	0.43000]
    dirR_B = [
        -0.34200	0.32140	-0.88300
        -0.34200	0.32140	-0.88300
        0.34200	0.32140	-0.88300
        0.34200	0.32140	-0.88300
        -0.34200	0.00000	0.93970
        -0.34200	0.00000	0.93970
        0.34200	0.00000	0.93970
        0.34200	0.00000	0.93970
        0.32140	0.34200	-0.88300
        0.32140	0.34200	-0.88300
        0.32140	-0.34200	-0.88300
        0.32140	-0.34200	-0.88300
        0.00000	0.34200	0.93970
        0.00000	0.34200	0.93970
        0.00000	-0.34200	0.93970
        0.00000	-0.34200	0.93970
        0.34200	-0.32140	-0.88300
        0.34200	-0.32140	-0.88300
        -0.34200	-0.32140	-0.88300
        -0.34200	-0.32140	-0.88300
        0.34200	0.00000	0.93970
        0.34200	0.00000	0.93970
        -0.34200	0.00000	0.93970
        -0.34200	0.00000	0.93970
        -0.32140	-0.34200	-0.88300
        -0.32140	-0.34200	-0.88300
        -0.32140	0.34200	-0.88300
        -0.32140	0.34200	-0.88300
        0.00000	-0.34200	0.93970
        0.00000	-0.34200	0.93970
        0.00000	0.34200	0.93970
        0.00000	0.34200	0.93970]

    return posOR_B, dirR_B, rCoM
end

function Conf3()
    rCoM = [0.011492287518140363, 0.013142790801125676, 1.4899054489372667]

    posOR_B = [
        -1.596998	-1.441434	1.575922
        -1.441434	-1.596998	1.575922
        -1.626346	-1.428356	0.830900
        -1.548564	-1.548564	0.801900
        -1.428356	-1.626346	0.830900
        1.441434	-1.596998	1.575922
        1.596998	-1.441434	1.575922
        1.428356	-1.626346	0.830900
        1.548564	-1.548564	0.801900
        1.626346	-1.428356	0.830900
        1.596998	1.441434	1.575922
        1.441434	1.596998	1.575922
        1.626346	1.428356	0.830900
        1.548564	1.548564	0.801900
        1.428356	1.626346	0.830900
        -1.441434	1.596998	1.575922
        -1.596998	1.441434	1.575922
        -1.428356	1.626346	0.830900
        -1.548564	1.548564	0.801900
        -1.626346	1.428356	0.830900]

    dirR_B = [
        0.659740	-0.047367	-0.750000
        -0.047367	0.659740	-0.750000
        0.353553	-0.353553	0.866025
        0.000000	0.000000	1.000000
        -0.353553	0.353553	0.866025
        0.047367	0.659740	-0.750000
        -0.659740	-0.047367	-0.750000
        0.353553	0.353553	0.866025
        0.000000	0.000000	1.000000
        -0.353553	-0.353553	0.866025
        -0.659740	0.047367	-0.750000
        0.047367	-0.659740	-0.750000
        -0.353553	0.353553	0.866025
        0.000000	0.000000	1.000000
        0.353553	-0.353553	0.866025
        -0.047367	-0.659740	-0.750000
        0.659740	0.047367	-0.750000
        -0.353553	-0.353553	0.866025
        0.000000	0.000000	1.000000
        0.353553	0.353553	0.866025]

    return posOR_B, dirR_B, rCoM
end

function testsplx(data)
    posOR_B, dirR_B, rCoM = data
    My = rcsMixMatrix(posOR_B, dirR_B, [], rCoM)
    # Random.seed!(13085610)
    N = size(My, 2)
    maxErr = -1.0
    r = RcsAllocator(My)
    uerr = []; yerr = []
    for i in 1:100000
        y = rand(N)
        # y[5] = 1.0
        # y[9] = 1.0
        # y[20] = 1.0
        u = My * y
        rcsAllocationSimplex!(r, u)
        yr = r.y
        if minimum(yr) < 0.0 || maximum(yr) > 1.0
            @show "err"
        end
        ur = My*yr
        maxErr = max(maxErr, norm(ur - u))
        if norm(ur - u) > 1e-8
            @show ur, u, i
            # @show norm(ur - u)
            @show ("nope")
            push!(yerr, y)
            push!(uerr, u)
        end
    end
    return maxErr
end

function testsplxAlloc(data)
    posOR_B, dirR_B, rCoM = data
    My = rcsMixMatrix(posOR_B, dirR_B, [], rCoM)
    N = size(My, 2)
    r = RcsAllocator(My)
    y = rand(N)
    u = My * y
    @btime rcsAllocationSimplex!($r, $u)
    return
end

@show testsplx(Conf1())
@show testsplx(Conf2())
@show testsplx(Conf3())
testsplxAlloc(Conf1())
